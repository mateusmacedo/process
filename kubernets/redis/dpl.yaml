apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          command:
            [
              "redis-server",
              "--databases",
              "4",
              "--protected-mode",
              "no",
              "--appendonly",
              "yes",
              "--maxmemory",
              "256mb",
              "--maxmemory-policy",
              "allkeys-lru",
              "--daemonize",
              "no",
              "--supervised",
              "no",
              "--save",
              "",
            ]
          volumeMounts:
            - name: redis-pvc
              mountPath: /data
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 6379
      volumes:
        - name: redis-pvc
          persistentVolumeClaim:
            claimName: redis-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: redis-lb
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: LoadBalancer
  externalTrafficPolicy: Local
